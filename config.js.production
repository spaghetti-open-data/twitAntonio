// general configuration
var mongoose = require('mongoose');
var config = {
  db_host: 'localhost',
  db_name: 'twitAntonio',
  db_collection: 'db15',
  db_collection_users: 'users',
  db_collection_twitter: 'tweets',
  db_debug: 0,
  api_url: 'http://www.spaghettiopendata.org/convertCsvtoJson.php',
  app_title:       'TwitAntonio',
  app_description: '',
  app_author:      'https://github.com/spaghetti-open-data/twitAntonio/graphs/contributors',
  app_port: 3002,
  app_secret: 'nirfnpv82958vj495vasdHGDASfaf293n9vfv',
  app_debug: true,
  base_path: '/',
  twitter_auth: false,
  twitter_harvest_search: '#twitantonio',


    // Define Mep model
  schema: new mongoose.Schema({
    mep_country : [String],
    mep_emailAddress : String,
    mep_epFotoUrl : String,
    mep_epPageUrl : String,
    mep_facebookId : String,
    mep_facebookPageUrl : String,
    mep_faction : String,
    mep_firstName : String,
    mep_lastName : String,
    mep_fullName : String,
    mep_localParty : String,
    mep_personalWebsite : String,
    mep_twitterUrl : String,
    mep_userId : String,
    mep_additionalProperties : String,
    mep_twitterUserName: String,
    parlamento: String,
    mep_follower_count: Number,
    mep_last_tweet_time: Date,
    mep_last_tweet : String,
    mep_tweet_count: Number
  }, {
    autoIndex : true
  }),

  // Twitter Harvester Schema
  tw_harvest_schema: {
    created_at: Date,
    entities: mongoose.Schema.Types.Mixed,
    from_user: String,
    from_user_id: Number,
    from_user_id_str: String,
    from_user_name: String,
    geo: String,
    id: Number,
    id_str: String,
    iso_language_code: String,
    metadata: [String],
    profile_image_url: String,
    profile_image_url_https: String,
    source: String,
    text: String,
    to_user: String,
    to_user_id: Number,
    to_user_id_str: String,
    to_user_name: String 
  },
  // Twitter Harvester Schema API 1.1
  tw_harvest_schema_1_1: {
    contributors : mongoose.Schema.Types.Mixed,
  coordinates: mongoose.Schema.Types.Mixed,
    created_at: Date,
    current_user_retweet : mongoose.Schema.Types.Mixed,
    entities: mongoose.Schema.Types.Mixed,
    favorited : Boolean,
    geo : mongoose.Schema.Types.Mixed,
    id: Number,
    id_str : String,
    in_reply_to_screen_name : String,
    in_reply_to_status_id : Number,
    in_reply_to_status_id_str: String,
    in_reply_to_user_id : Number,
    in_reply_to_user_id_str : String,
    place : mongoose.Schema.Types.Mixed,
    possibly_sensitive : Boolean,
    scopes : mongoose.Schema.Types.Mixed,
    retweet_count : Number,
    retweeted : Boolean,
    source: String,
    text : String,
    truncated : Boolean,
    user : mongoose.Schema.Types.Mixed,
    withheld_copyright :  Boolean,
    withheld_in_countries : mongoose.Schema.Types.Mixed,
    withheld_scope : String,
  },
  
  factionNames: {
          'c': "Centro",
          'cs': "Centro Sinistra",
          'cd': "Centro Destra",
          's': "Sinistra",
          '5s': "M5S",
          'fare': "FARE"
  },
  
  parlamento: {"camera": "Camera", 
               "senato": "Senato"},
               
  partiti: {"sel": "SEL",
            "partito democratico": "PD",
            "movimento 5 stelle": "Movimento 5 Stelle",
            "Lista Monti": "Lista Monti",
            "Partito Democratico": "Partito Democratico",
            "Rivoluzione Civile": "Rivoluzione Civile",
            "udc": "UDC",
            "Fermare Il Declino": "Fare Per Fermare Il Declino",
            "pdl": "PDL",
            "Fratelli D'italia": "Fratelli D'italia",
            "Lega Nord": "Lega Nord",
            "fli": "FLI",
            "Centro Democratico": "Centro Democratico",
          }
  ,
  
  sorting: {
            "name": "Nome",
            "party": "Partito",
            "country": "Circoscrizione",
            "tweets": "Numero di Tweet",
            "followers": "Numero di Follower",
            //"lastTweet": "Data Ultimo Tweet"
          }
}
module.exports = config;
